package com.CollectionsPractice;

import java.util.*;
import java.util.Map.Entry;

public class MapPractice {

	public static void main(String[] args) {
		List<Integer> list = new Vector<>();
		//Map<Key type, Value type>
		//Creation of map
		Map<Integer, String> m = new Hashtable<>();
		//if your not interested in you can remove generics
		//Map n = new Hashtable();
		
		//Addition of element into the map
		m.put(500050, "Hyderabad");	
		m.put(603103, "Chennai");
		m.put(100057, "Delhi");
		m.put(560037, "Bengaluru");
		m.put(400001, "Mumbai");
		
		//Retrieval of keys from the map
//		Set<Integer> keys = m.keySet();
//		for (Integer key : keys) {
//			System.out.println(key);
//		}
//		
//		System.out.println();
//		//Retrieval of values from the map
//		Collection<String> values = m.values();
//		for (String value : values) {
//			System.out.println(value);
//		}
//		
//		//Retrieval of values from the map based on keys
//		//System.out.println(m.get(603103));
//		for (Integer key : keys) {
//			System.out.println(key +">>>>>" +m.get(key));
//		}
//		System.out.println(m);
//		//Deletion of element from the map
//		//m.remove(100057);
//		//System.out.println(m);
//		//m.remove(500050, "Hyderabad");
//		
//		//Verification of keys and verification of values
//		System.out.println(m.containsKey(100057));
//		System.out.println(m.containsValue("Delhi"));
//		
//		//Updation of elements
//		System.out.println(m);
//		m.put(100057, "New Delhi");
//		System.out.println(m);
//		
//		//To avoid overriding the value or not to repeat the same value
//		m.putIfAbsent(560037, "B'lore");
//		m.putIfAbsent(517001, "Chittoor");
//		m.replace(100057, "Vasant Vihar(Delhi)");
//		System.out.println(m);
//		//count num of element
//		System.out.println(m.size());
//		//deletion of entire Map
//		m.clear();
		System.out.println(m);
		Set<Entry<Integer, String>> entries = m.entrySet();
		for (Entry<Integer, String> entry : entries) {
			Integer key = entry.getKey();
			String value = entry.getValue();
			System.out.println(key +">>>>>" +value);
		}

	}

}
